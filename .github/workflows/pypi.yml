name: Publish to pypi
on: [push, pull_request]

permissions: {}

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: macos-arm
            # macos-14+ (including latest) are ARM64 runners
            runs-on: macos-latest

    env:
        MACOSX_DEPLOYMENT_TARGET: 14.0

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: gcc
          version: 12


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel pip-tools
          pip-compile -o requirements.txt --extra test --strip-extras
          python -m pip install -r requirements.txt

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0


      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel pip-tools
          pip-compile -o requirements.txt --extra test --strip-extras
          python -m pip install -r requirements.txt

      - name: Build sdist
        run: python3 -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/pyQuadP
    permissions:
      id-token: write
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
